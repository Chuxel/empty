name: 'VSCDC smoke test'
inputs:
  definition:
    description: 'Definition to test'
    required: true
    default: 'debian'
  image:
    description: 'Image to run smoke test in'
    required: true
    default: 'none'
  user:
    description: 'User in container image to use for smoke test'
    required: true
    default: 'vscode'

runs:
  using: composite
  steps:
    - name: Build image
      id: build_image
      shell: bash
      run: |
        set -e

        # Run test build
        yarn install
        GIT_BRANCH=$(echo "${{ github.ref }}" | grep -oP 'refs/(heads|tags)/\K(.+)')
        if [ "$GIT_BRANCH" == "" ]; then 
            GIT_BRANCH=main
        fi
        chmod +x build/vscdc
        build/vscdc push  ${{ inputs.definition }} \
                          --no-push \
                          --release $GIT_BRANCH \
                          --github-repo "microsoft/vscode-dev-containers" \
                          --registry "mcr.microsoft.com" \
                          --registry-path "vscode/devcontainers" \
                          --stub-registry "mcr.microsoft.com" \
                          --stub-registry-path "vscode/devcontainers"

    - name: Test image
      id: test_image
      shell: bash
      run: |
        # Run test script for image if one exists

        if [ "${{ inputs.image }}" = "none" ]; then
          echo "Image not specified. Aborting test."
          exit 0
        fi

        set -e
        
        # Start container
        container_name="vscdc-test-container"
        docker run -d --name ${container_name} --rm --init --privileged -v "$(pwd)/containers/${{ inputs.definition }}:/workspace" ${{ inputs.image }}

        # Fake out existence of extensions, VS Code Server
        echo "(*) Stubbing out extensions and VS Code Server..."
        dev_container_relative_path="containers/${{ inputs.definition }}/.devcontainer"
        mkdir -p "/tmp/${dev_container_relative_path}"
        cp -f "$(pwd)/${dev_container_relative_path}/devcontainer.json" "/tmp/${dev_container_relative_path}/"
        dev_container_tmp="/tmp/${dev_container_relative_path}/devcontainer.json"
        sed -i'.bak' -e "s/\\/\\/.*/ /g" "${dev_container_tmp}"
        extensions="$(jq '.extensions' --compact-output "${dev_container_tmp}" | tr -d '[' | tr -d ']' | tr ',' '\n' 2>/dev/null || echo -n '')"
        echo "(*) Extensions in devcontainer.json: ${extensions}"
        docker exec -u "${{ inputs.user }}" ${container_name} /bin/sh -c "\
          echo \"(*) Creating folders in \$HOME...\" \
          && mkdir -p \$HOME/.vscode-server/bin \$HOME/.vscode-server/extensions \
          && cd \$HOME/.vscode-server/extensions \
          && if [ \"${extensions}\" != '' ]; then echo \"${extensions}\" | xargs -n 1 mkdir -p; fi"

        # Run actual test
        echo "(*) Running test..."
        docker exec -u "${{ inputs.user }}" ${container_name} /bin/sh -c  '\
          set -e \
          && id \
          && echo "$HOME" \
          && cd /workspace \
          && if [ -f "test-project/test.sh" ]; then \
            cd test-project \
            && if [ "$(id -u)" = "0" ]; then \
              chmod +x test.sh; \
            else \
              sudo chmod +x test.sh; \
            fi \
            && ./test.sh; \
          else \
            ls -a; 
          fi'